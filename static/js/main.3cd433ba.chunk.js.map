{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","Container","map","option","type","onClick","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","console","log","List","Item","Notification","message","App","useState","setGood","setNeutral","setBad","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","percentage","Object","keys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,yHCsB1CC,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,UAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLL,UAAU,SAEVM,QAAS,WACPP,EAAgBK,IALpB,SAQGA,GALIA,S,gBCEAG,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAAST,UAAWC,IAAEM,QAAtB,UACE,mCAAMC,KACLC,M,gBCSQC,EAbI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAE/C,OADAC,QAAQC,IAAIH,GAEV,qBAAId,UAAWC,IAAEiB,KAAjB,UACE,qBAAIlB,UAAWC,IAAEkB,KAAjB,mBAA8BR,KAC9B,qBAAIX,UAAWC,IAAEkB,KAAjB,sBAAiCP,KACjC,qBAAIZ,UAAWC,IAAEkB,KAAjB,kBAA6BN,KAC7B,qBAAIb,UAAWC,IAAEkB,KAAjB,oBAA+BL,KAC/B,qBAAId,UAAWC,IAAEkB,KAAjB,uBAAkCJ,EAAlC,WCLSK,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGrB,UAAU,eAAb,SAA6BqB,KC2DvBC,MAxDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNZ,EADM,KACAa,EADA,OAEiBD,mBAAS,GAF1B,mBAENX,EAFM,KAEGa,EAFH,OAGSF,mBAAS,GAHlB,mBAGNV,EAHM,KAGDa,EAHC,KAKPC,EAAQ,CAAEhB,OAAMC,UAASC,OAkBzBe,EAAqB,WACzB,OAAOjB,EAAOC,EAAUC,GAGpBgB,EAAkC,SAAAf,GACtC,OAAiB,IAAVA,EAAc,EAAIgB,KAAKC,MAAc,IAAPpB,EAAcG,IAE/CA,EAAQc,IACRI,EAAaH,EAAgCf,GACnD,OACE,gCACE,cAAC,EAAD,CAASN,MAAM,6BAAf,SACE,cAAC,EAAD,CACEV,QAASmC,OAAOC,KAAKP,GACrB5B,gBA9BiB,SAAAK,GACvB,OAAQA,GACN,IAAK,OACHoB,GAAQ,SAAAG,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHF,GAAW,SAAAE,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHD,GAAO,SAAAC,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,aAqBF,cAAC,EAAD,CAASnB,MAAM,aAAf,SACGM,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,IACPb,mBAAoBc,EAAgCG,KAGtD,cAAC,EAAD,CAAcX,QAAQ,4BC7CjBc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAxC,EAAOC,QAAU,CAAC,UAAY,qC,kBCA9BD,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.3cd433ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Statistics_List__1Alsi\",\"Item\":\"Statistics_Item__17xT2\"};","import React from 'react';\nimport s from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={s.Container}>\n      {options.map(option => (\n        <button\n          type=\"button\"\n          className=\"button\"\n          key={option}\n          onClick={() => {\n            onLeaveFeedback(option);\n          }}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.Section}>\n      <h2> {title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import React from 'react';\nimport s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  console.log(total);\n  return (\n    <ul className={s.List}>\n      <li className={s.Item}>Good: {good}</li>\n      <li className={s.Item}>Neutral: {neutral}</li>\n      <li className={s.Item}>Bad: {bad}</li>\n      <li className={s.Item}>Total: {total}</li>\n      <li className={s.Item}>Positive: {positivePercentage}%</li>\n    </ul>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p className=\"Notification\">{message}</p>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { useState, useMemo } from 'react';\nimport shortid from 'shortid';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport Notification from './Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const state = { good, neutral, bad };\n\n  const updateStatistics = option => {\n    switch (option) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = total => {\n    return total === 0 ? 0 : Math.round((good * 100) / total);\n  };\n  const total = countTotalFeedback();\n  const percentage = countPositiveFeedbackPercentage(total);\n  return (\n    <div>\n      <Section title=\"Please leave your feedback\">\n        <FeedbackOptions\n          options={Object.keys(state)}\n          onLeaveFeedback={updateStatistics}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {total > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage(percentage)}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"FeedbackOptions_Container__3yioL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__TCowy\"};"],"sourceRoot":""}